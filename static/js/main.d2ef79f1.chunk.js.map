{"version":3,"sources":["serviceWorker.js","App.js","Upload.js","DataTable.js","Admin.js","Routes.js","index.js","logo.svg"],"names":["Boolean","window","location","hostname","match","App","useState","color","setColor","data","useEffect","axios","get","then","response","console","log","catch","error","style","height","backgroundColor","Container","maxWidth","paddingTop","Grid","container","display","justifyContent","alignItems","spacing","component","item","Typography","variant","Switch","checked","onChange","name","Divider","className","length","textAlign","Upload","state","title","image","content","handleEditorChange","editor","setState","handleChange","e","target","value","handleFileChange","files","handleSubmit","preventDefault","fd","FormData","append","Axios","post","success","alert","reload","TextField","fullWidth","label","this","type","width","border","padding","apiKey","initialValue","init","menubar","selector","plugins","toolbar","toolbar_mode","onEditorChange","Button","onClick","Component","DataTable","onDelete","Table","TableHead","TableRow","TableCell","TableBody","map","key","id","comments","likes","Admin","username","password","handleDelete","delete","copyState","filter","event","localStorage","setItem","handleLogout","removeItem","genre","getItem","onSubmit","Routes","exact","path","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.d2ef79f1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  Switch,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nfunction App() {\r\n  const [color, setColor] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const handleColor = () => {\r\n    setColor(!color);\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://blog-api-98.herokuapp.com/blogs\")\r\n      .then((response) => {\r\n        console.log(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{ height: \"100vh\", backgroundColor: color ? \"white\" : \"black\" }}\r\n    >\r\n      <Container maxWidth=\"md\">\r\n        <div\r\n          style={{\r\n            paddingTop: 30,\r\n            color: color ? \"black\" : \"white\",\r\n          }}\r\n        >\r\n          <Grid\r\n            container\r\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n            alignItems=\"center\"\r\n            spacing={1}\r\n            component=\"title\"\r\n          >\r\n            <Grid item>\r\n              <Typography variant=\"h3\">\r\n                <b>New English!</b>\r\n              </Typography>\r\n              <Typography variant=\"h6\">\r\n                Học tiếng Anh dành cho người mới cùng Maximusss\r\n              </Typography>\r\n            </Grid>\r\n            <Grid>\r\n              Dark\r\n              <Switch\r\n                color={\"secondary\"}\r\n                checked={color}\r\n                onChange={handleColor}\r\n                name=\"color\"\r\n              />\r\n              Light\r\n            </Grid>\r\n          </Grid>\r\n          <Divider />\r\n          <div className=\"data\" style={{ paddingTop: 30 }}>\r\n            {data.length > 0 ? (\r\n              <p>Đã có dữ liệu</p>\r\n            ) : (\r\n              <h3 style={{ textAlign: \"center\" }}>\r\n                Chưa có nội dung nào ở đây\r\n              </h3>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from \"react\";\r\nimport { TextField, Button, Container } from \"@material-ui/core\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport Axios from \"axios\";\r\n\r\nexport default class Upload extends Component {\r\n  state = {\r\n    title: null,\r\n    image: null,\r\n    content: null,\r\n  };\r\n  handleEditorChange = (content, editor) => {\r\n    this.setState({ content: content });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ title: e.target.value });\r\n  };\r\n\r\n  handleFileChange = (e) => {\r\n    this.setState({ image: e.target.files[0] });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const fd = new FormData();\r\n    fd.append(\"image\", this.state.image);\r\n    fd.append(\"genre\", \"English\");\r\n    fd.append(\"title\", this.state.title);\r\n    fd.append(\"desc\", \"Description\");\r\n    fd.append(\"content\", this.state.content);\r\n\r\n    Axios.post(\"https://blog-api-98.herokuapp.com/blogs\", fd)\r\n      .then((response) => {\r\n        if (response.data.success) alert(\"Upload successfully\");\r\n        window.location.reload();\r\n      })\r\n      .catch((error) => console.log(error.response));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Title\"\r\n          variant=\"outlined\"\r\n          onChange={this.handleChange}\r\n        />\r\n        <br />\r\n        <br />\r\n        <input\r\n          type=\"file\"\r\n          onChange={this.handleFileChange}\r\n          style={{\r\n            width: \"100%\",\r\n            border: \"1px solid gainsboro\",\r\n            padding: \"10px 0px 10px 2px\",\r\n          }}\r\n        />\r\n        <br />\r\n        <br />\r\n        <Editor\r\n          apiKey=\"oaknz0i9nteit4h5806mvsazgv7wd4n8agw7s7rfmjjzaiby\"\r\n          initialValue=\"<p>This is the initial content of the editor</p>\"\r\n          init={{\r\n            height: 500,\r\n            menubar: true,\r\n            selector: \"textarea\",\r\n            plugins: [\r\n              \"advlist autolink lists link image charmap print preview anchor hr anchor pagebreak\",\r\n              \"searchreplace visualblocks code fullscreen\",\r\n              \"insertdatetime media table paste code help wordcount\",\r\n            ],\r\n            toolbar: `undo redo | formatselect  | bold italic backcolor | \\\r\n                   alignleft aligncenter alignright alignjustify | \\\r\n                   bullist numlist outdent indent | removeformat | media`,\r\n            toolbar_mode: \"floating\",\r\n          }}\r\n          onEditorChange={this.handleEditorChange}\r\n        />\r\n        <br />\r\n        <Button\r\n          onClick={this.handleSubmit}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          fullWidth\r\n        >\r\n          Send\r\n        </Button>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nexport default function DataTable({ data, onDelete }) {\r\n  return (\r\n    <Container>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Id</TableCell>\r\n            <TableCell>Title</TableCell>\r\n            <TableCell>Comments</TableCell>\r\n            <TableCell>Likes</TableCell>\r\n            <TableCell>Thao tác</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map((item) => {\r\n            return (\r\n              <TableRow key={item.id}>\r\n                <TableCell>{item.id}</TableCell>\r\n                <TableCell>{item.title}</TableCell>\r\n                <TableCell>{item.comments.length}</TableCell>\r\n                <TableCell>{item.likes}</TableCell>\r\n                <TableCell>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={() => onDelete(item.id)}\r\n                  >\r\n                    Xóa\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TextField, Button, Divider } from \"@material-ui/core\";\r\nimport Upload from \"./Upload\";\r\nimport Axios from \"axios\";\r\nimport DataTable from \"./DataTable\";\r\n\r\nexport default class Admin extends Component {\r\n  state = {\r\n    username: null,\r\n    password: null,\r\n    data: [],\r\n  };\r\n  componentDidMount() {\r\n    Axios.get(\"https://blog-api-98.herokuapp.com/blogs\")\r\n      .then((response) => {\r\n        this.setState({\r\n          data: response.data.data.filter((item) => {\r\n            return item.genre === \"English\";\r\n          }),\r\n        });\r\n      })\r\n      .catch((error) => console.log(error.response));\r\n  }\r\n\r\n  handleDelete = (id) => {\r\n    Axios.delete(`https://blog-api-98.herokuapp.com/blogs/${id}`)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          let copyState = this.state.data.filter((item) => {\r\n            return item.id !== id;\r\n          });\r\n\r\n          this.setState({ data: copyState });\r\n          alert(\"Deleted\");\r\n        } else alert(\"Error\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(this.state);\r\n    if (\r\n      this.state.username === \"nguyenquochung\" &&\r\n      this.state.password === \"nguyenduclong\"\r\n    ) {\r\n      alert(\"Welcome!\");\r\n      window.localStorage.setItem(\"auth\", true);\r\n      window.location.reload();\r\n    } else {\r\n      alert(\"Wrong username or password\");\r\n    }\r\n  };\r\n  handleLogout = () => {\r\n    window.localStorage.removeItem(\"auth\");\r\n    window.location.reload();\r\n  };\r\n  render() {\r\n    return (\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <h1>Admin </h1>\r\n        {window.localStorage.getItem(\"auth\") ? (\r\n          <div>\r\n            <h1>Welcome Admin!</h1>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={this.handleLogout}\r\n            >\r\n              Logout\r\n            </Button>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <Upload />\r\n            <h1>Posts</h1>\r\n            <DataTable data={this.state.data} onDelete={this.handleDelete} />\r\n          </div>\r\n        ) : (\r\n          <form onSubmit={this.handleSubmit}>\r\n            <TextField\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              type=\"text\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <br />\r\n            <TextField\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <br />\r\n            <br />\r\n            <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n              Login\r\n            </Button>\r\n\r\n            <Divider />\r\n          </form>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport Admin from \"./Admin\";\r\n\r\nexport default class Routes extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={App} />\r\n          <Route exact path=\"/admin\" component={Admin} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n// import App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport Routes from \"./Routes\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Routes />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}